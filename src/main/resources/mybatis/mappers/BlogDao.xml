<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.stupidwolf.dao.BlogDao">
    <select id="findBlogById" resultType="blog">
        SELECT
             b.b_id id,
             b.title,
             b.content content,
             b.summary,
             b.collected_count,
             b.comment_count,
             b.create_time,
             b.last_modify_time,
             t.t_id `type.id`,
             t.name `type.name`,
             u.u_id `user.id`,
             u.`name` `user.name`
            FROM
                blog b
            INNER JOIN type t
            ON b.t_id = t.t_id
            INNER JOIN USER u
            ON b.u_id = u.u_id
            WHERE
	  b.b_id = #{id}
	  ;
    </select>

    <select id="findAllBlogs" resultType="blog">
       SELECT
        b.b_id id,
        b.title,
        b.summary,
        b.create_time,
        b.last_modify_time,
        b.view_count,
        b.collected_count,
        b.comment_count,
        u.u_id `user.id`,
        u.`name` `user.name`,
        t.t_id `type.id`,
        t.`name` `type.name`
        FROM
        `blog` b INNER JOIN `user` u ON b.u_id = u.u_id
        INNER JOIN type t ON b.t_id = t.t_id
        <where>
            <if test="userId != null">
                b.u_id = #{userId}
            </if>
        </where>
        ORDER BY b.b_id ASC
        LIMIT #{offset}, #{limit}
        ;
    </select>



    <insert id="insertBlogWithTypeAndUser" parameterType="blog"
            useGeneratedKeys="true" keyProperty="id" flushCache="true">
      INSERT INTO `blog`
      (
      `u_id`,
      `t_id`,
      `title`,
      `summary`,
      `content`,
      `create_time`,
      `last_modify_time`
      )
       VALUES (
       #{user.id},
       #{type.id},
       #{title},
       #{summary},
       #{content},
       #{createTime},
       #{lastModifyTime}
       );
    </insert>

    <update id="updateBlogWithType" parameterType="blog"
            flushCache="true">
        UPDATE `blog` b
        <set>
            <if test="type != null">
                t_id = #{type.id},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="summary!=null">
                summary=#{summary},
            </if>
            <if test="content!=null">
                content = #{content},
            </if>
            <if test="createTime!=null">
                create_time=#{createTime},
            </if>
            <if test="lastModifyTime != null">
                last_modify_time = #{lastModifyTime},
            </if>
            <if test="viewCount != null">
                view_count = #{viewCount},
            </if>
            <if test="collectedCount!=null">
                collected_count=#{collectedCount},
            </if>
            <if test="commentCount != null">
                comment_count = #{commentCount}
            </if>
        </set>
        WHERE b.b_id = #{id}
        ;
    </update>

    <delete id="deleteBlogById" flushCache="true" >
       DELETE ignore FROM `blog`
       WHERE b_id = #{id}
        ;
    </delete>

    <select id="count" resultType="int">
   SELECT
        count(b.b_id)
    FROM
        `blog` b
    WHERE
        b.u_id = #{id};
    </select>
</mapper>